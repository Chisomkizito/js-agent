/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { Reward, RewardInterface } from "../../Reward.sol/Reward.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "RewardSent",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "sendReward",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b506101c88061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806307420a411461002d575b5f5ffd5b6100476004803603810190610042919061012c565b610049565b005b8173ffffffffffffffffffffffffffffffffffffffff167f6177f4110771217c72937d51f3a73915f2c714a6b98507e17eea7a186136a24a8260405161008f9190610179565b60405180910390a25050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100c88261009f565b9050919050565b6100d8816100be565b81146100e2575f5ffd5b50565b5f813590506100f3816100cf565b92915050565b5f819050919050565b61010b816100f9565b8114610115575f5ffd5b50565b5f8135905061012681610102565b92915050565b5f5f604083850312156101425761014161009b565b5b5f61014f858286016100e5565b925050602061016085828601610118565b9150509250929050565b610173816100f9565b82525050565b5f60208201905061018c5f83018461016a565b9291505056fea26469706673582212205d35b0fb42de6c1fe3ec11d320c63d1366f4900f36ffd5b8bf54e60aca1f7f2d64736f6c634300081c0033";

  
      type RewardConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: RewardConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Reward__factory extends ContractFactory {
    
      constructor(...args: RewardConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Reward & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Reward__factory {
      return super.connect(runner) as Reward__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RewardInterface {
      return new Interface(_abi) as RewardInterface;
    }
    
    override attach(address: string | Addressable): Reward {
      return super.attach(address) as Reward;
    }
  static connect(address: string, runner?: ContractRunner | null): Reward {
      return new Contract(address, _abi, runner) as unknown as Reward;
    }
  }

  
  